<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xk1hmc3+D0iLQY9Mx/O5AAAAAElFTkSuQmCC
</value>
  </data>
</root>